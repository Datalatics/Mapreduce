package ca.datalatics.mapreduce.custom;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.hadoop.io.WritableComparable;


public static class IntPair implements WritableComparable<IntPair> {

	private int first;
	private int second;

	public void set(int left, int right) {
		this.first = left;
		this.second = right;
	}

	@Override
	public void readFields(DataInput in) throws IOException {

		first = in.readInt();
		second = in.readInt();
	}

	@Override
	public void write(DataOutput out) throws IOException {
		out.writeInt(first);
		out.writeInt(second);
	}

	public int hashcode() {
		return first * 111 * second;
	}

	public boolean equals(Object obj) {
		if (obj instanceof IntPair) {
			IntPair ob = (IntPair) obj;
			return ob.first == this.first && ob.second == this.second;
		} else {
			return false;
		}
	}

	@Override
	public int compareTo(IntPair o) {
		if (first != o.first) {
			return first < o.first ? -1 : 1;
		} else if (second != o.second) {
			return second < o.second ? -1 : 1;
		} else {
			return 0;
		}
	}

	public int getFirst() {
		return first;
	}

	public int getSecond() {
		return second;
	}

}

