package ca.datalatics.mapreduce.distcache;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.net.URI;
import java.util.HashMap;
import java.util.Map;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class DistCacheDriver {

	public static class DistCacheMapper extends Mapper<LongWritable, Text, Text, ProvincePop> {
		
		private Map<String, String> abMap = new HashMap<String, String>();
		private Text outputKey = new Text();

		public void setup(Context context) throws IOException {

			URI[] uri = context.getCacheFiles();

			if (uri == null || uri != null && uri.length == 0) {
				return;
			}
			
			

			for (URI url : uri) {

				Path path = new Path(url);

				if (path.getName().equals("provinces.txt")) {
					try(BufferedReader reader = new BufferedReader(new FileReader(path.toString()))){
					String line = reader.readLine();
					while(line != null) {
						String[] tokens = line.split("\t");
						String ab = tokens[0];
						String provience = tokens[1];
						abMap.put(ab, provience);
						line = reader.readLine();
					}
				  
				  }

				}

			}

		}

		public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
			
			String row = value.toString();
        	String[] tokens = row.split("\t");
        	
        	ProvincePop pv = new ProvincePop(tokens[0],tokens[1],tokens[2]);
        	
        	String province = abMap.get(pv.getProvinceAb());
        	outputKey.set(province);
      	  	context.write(outputKey,pv);

		}

	}

	public static void main(String[] args) throws Exception {
		Configuration conf = new Configuration();
		Job job = Job.getInstance(conf, "DistCacheDriver");
		job.setJarByClass(ca.datalatics.mapreduce.distcache.DistCacheDriver.class);
		job.setMapperClass(DistCacheMapper.class);

		job.addCacheFile(new URI("/dataset/dist_cache/provinces.txt"));
		
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(ProvincePop.class);

		FileInputFormat.setInputPaths(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		
		Path output = new Path(args[1]);
		
		output.getFileSystem(conf).delete(output);

		if (!job.waitForCompletion(true))
			return;
	}

}
